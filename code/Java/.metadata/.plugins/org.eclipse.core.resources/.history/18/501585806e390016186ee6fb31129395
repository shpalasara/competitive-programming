package round_359_2;

import java.util.Scanner;

public class Robbers_watch {

	/**
	 * @param args
	 */
	public static int ans=0;
	public static String str_n,str_m;
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt(),m=sc.nextInt();
		
		int length_n = find_length_base_seven(n);
		int length_m = find_length_base_seven(m);
		
		str_n = generate_base_seven(n);
		str_m = generate_base_seven(m);
				
		if(length_n+length_m>7)
			System.out.println("0");
		else
		{
			String str = "";
			generate(n,m,length_n,length_m,0,str);
			System.out.println(ans);
		}
		
		sc.close();
	}
	
	public static void generate(int n,int m,int length_n,int length_m,int index,String str){
		
		if(index>=length_n+length_m)
		{
			if(check(str,length_n,length_m))
				ans++;
			return;
		}
		
		String temp;
		
		for(int i=0;i<7;i++)
		{
			temp = str+""+i;
			generate(n,m,length_n,length_m,index+1,temp);
		}
	}
	
	public static boolean check(String str,int length_n,int length_m){
		
		int[] count = new int[7];
		
		for(int i=0;i<str.length();i++)
			count[str.charAt(i)-'0']++;
		
		if(count[0]<=1 && count[1]<=1 && count[2]<=1 && count[3]<=1 && count[4]<=1 && count[5]<=1 && count[6]<=1)
		{
			String n1 = str.substring(0, length_n);
			String m1 = str.substring(length_n);
			
			if(Integer.parseInt(n1)<=Integer.parseInt(str_n) && Integer.parseInt(m1)<=Integer.parseInt(str_m))
				return true;
		}
		
		return false;
	}

	public static int find_length_base_seven(int data){
		
		int up = 7,ans=1;
		
		while(data>=up)
		{
			ans++;
			up = up*7;
		}
		
		return ans;
	}
	
	public static String generate_base_seven(int data){
		
		int up=1;
		String str="";
		
		while((up*7)<=data)
		{
			up*=7;
		}
		
		for(int i=1;i<7;i++)
		{
			if(up*i<=data && up*(i+1)>data)
			{
				str = i+ generate_base_seven(data-up*i);
				break;
			}
		}
		
		return str;
	}
}
