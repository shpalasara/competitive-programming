#include<stdio.h>

void quicksort(int *x,int *ans,int first,int last){
    int pivot,j,i;
    int temp,_temp;
	
     if(first<last){
         pivot=first;
         i=first;
         j=last;

         while(i<j){
             while(x[i]<=x[pivot]&&i<last)
                 i++;
             while(x[j]>x[pivot])
                 j--;
             if(i<j){
                 temp=x[i];
                  x[i]=x[j];
                  x[j]=temp;
		_temp=ans[i];
		ans[i]=ans[j];
		ans[j]=_temp;
             }
         }

         temp=x[pivot];
         x[pivot]=x[j];
         x[j]=temp;
	_temp=ans[pivot];
	ans[pivot]=ans[j];
	ans[j]=_temp;
         quicksort(x,ans,first,j-1);
         quicksort(x,ans,j+1,last);
    }
}

int main()
{
	int T,n,i,j,temp,_temp;
	scanf("%d",&T);
	for(i=0;i<T;i++)
	{
		scanf("%d",&n);
		int total[n];
		int index[n];
		for(j=0;j<n;j++)
		{
			total[j]=0;
			index[j]=j;
		}
		for(j=0;j<2*(n-2);j++)
		{
			scanf("%d",&temp);
			total[temp-1]++;
		}
		quicksort(total,index,0,n-1);
		//int count=0;
		if((index[0]!=n-2 || index[0]!=n-1) && (index[n-1]!=n-1 || index[n-1]!=n-2))	
		{
			printf("both\n");
			printf("%d %d\n",index[n-1]+1,n);
			printf("%d %d\n",index[n-1]+1,n-1);
		}
		else if((index[0]==n-2 || index[0]==n-1) && (index[n-1]==n-1 || index[n-1]==n-2))
		{
			if(total[n-1]<=total[n-2]+1 && total[0]==total[1])
			{
				if(n>3)
				{		
					for(j=1;j<n-2;j++)
					{
						if(index[j]!=n-1 && index[j]!=n-2)
						{
							_temp=j+1;
							break;
						}
					}		
					printf("both\n");
					printf("%d %d\n",index[n-2]+1,n);
					printf("%d %d\n",index[n-2]+1,_temp);
				}
				else 
				{
					/*if(n==4 && total[n-1]==total[n-2])
					{
						printf("both\n");
						printf("%d %d\n",index[n-2]+1,n);
						printf("%d %d\n",index[n-2]+1,n-1);
					}
					else if(n==4)
					{
						printf("one\n");
						printf("%d %d\n",index[n-2]+1,n);
						printf("%d %d\n",index[n-2]+1,n-1);
					}*/
					if(total[n-1]==total[n-2])
					{
						printf("one\n");
						pintf("1 3\n1 2\n");
					}
					else
					{
						printf("none\n");
						printf("1 3\n1 2\n");
						//printf("%d %d\n",1,n-1);
					}
				}			
			}
			else if(total[n-1]<=total[n-2]+1)
			{
				if(n>3)
				{
					for(j=1;j<n-2;j++)
					{
						if(index[j]!=n-1 && index[j]!=n-2)
						{
							_temp=j+1;
							break;
						}
					}
					printf("one\n");
					if(index[0]==n-2)
						printf("%d %d\n",index[n-2]+1,_temp);
					else
						printf("%d %d\n",index[n-2]+1,n);
					if(index[0]==n-1)
						printf("%d %d\n",index[n-2]+1,_temp);
					else
						printf("%d %d\n",index[n-2]+1,n-1);
				}			
				else if(total[n-1]==total[n-2])
				{
					printf("one\n");
					printf("1 3\n1 2\n");
				}
				else	
				{
					printf("none\n");
					printf("1 3\n1 2\n");
					//printf("%d %d\n",1,n-1);
				}
			}
			else if(total[0]==total[1])
			{
				if(n>3)
				{
					printf("one\n");
					printf("%d %d\n",index[n-2]+1,n);
					printf("%d %d\n",index[n-2]+1,n-1);
				}
				else
				{
					printf("none\n");
					printf("%d %d\n",1,n);
					printf("%d %d\n",1,n-1);
				}			
			}
			else
			{
				printf("none\n");
				printf("1 %d\n",n);
				printf("1 %d\n",n-1);
			}
		}
		else if(index[n-1]==n-1 || index[n-1]==n-2)
		{
			if(n>3)
			{
				if(total[n-1]==total[n-2])
				{
					printf("both\n");
					printf("1 %d\n"index[n-2]+1,n);
					printf("1 %d",index[n-2]+1,n-1);
				}
				else if(total[n-1]==total[n-2]+1)
				{
					for(j=1;j<n-1;j++)
					{
						if(index[j]!=n-1 && index[j]!=n-2)
						{
							_temp=j+1;
							break;
						}
					}
					printf("both\n");
					printf("%d %d\n",index[n-2]+1,_temp);
					printf("%d %d\n",index[n-2]+1,_temp);
				}
			}
			else if(total[n-1]==total[n-2]+1)
			{
				if(n>4)
				{
					for(j=1;j<n-1;j++)
					{
						if(index[j]!=n-1 && index[j]!=n-2)
						{
							_temp=j+1;
							break;
						}
					}
					printf("both\n");
					printf("%d %d\n",index[n-2]+1,_temp);
					printf("%d %d\n",index[n-2]+1,_temp);
				}
				else if(total[0]+2<total[1])
				{
					printf("one\n");
					printf("1 3\n");
					printf("1 2\n");
				}
				else
				{
					printf("none\n");
					printf("1 3\n");
					printf("1 2\n");
				}			
			}
		}
		else
		{
			if(n>4)
			{
				if(total[0]==total[1])
				{
					printf("both\n");
					printf("%d %d\n",index[n-1]+1,n);
					printf("%d %d\n",index[n-1]+1,n-1);
				}
				else
				{
					printf("one\n");
					printf("%d %d\n",index[n-1]+1,n);
					printf("%d %d\n",index[n-1]+1,n-1);
				}
			}
			else
			{
				if(total[0]+2<total[1])
				{
					printf("one\n");
					printf("1 3\n");
					printf("1 2\n");
				}
				else
				{
					printf("none\n");
					printf("1 3\n");
					printf("1 2\n");
				}
			}
		}
	}
	return 0;
}
