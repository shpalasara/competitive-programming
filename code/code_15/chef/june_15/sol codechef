#include <stdio.h>
 
//fast that would run for c as well.
inline int next_int() {
	int n = 0;
	char c = getchar_unlocked();
	while (!('0' <= c && c <= '9')) {
	c = getchar_unlocked();
	}
	while ('0' <= c && c <= '9') {
	n = n * 10 + c - '0';
	c = getchar_unlocked();
	}
	return n;
}
 
//output unsigned int
inline void fastWrite(unsigned a)
{
	char snum[12];
	int i=0;
	do
	{
	snum[i++]=a%10+48;
	a=a/10;
	}
	while (a);
	i=i-1;
	while (i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}
 
int main(int argc, char const *argv[])
{
	int t;
	double chef_first , yuri_first , ans , chef_range , yuri_range , chef_wait , yuri_wait;
	// scanf("%d" , &t);
	t = next_int();
	while(t--)
	{
	// scanf("%lf %lf %lf %lf" , &chef_range , &yuri_range , &chef_wait , &yuri_wait);
	// scan(chef_range);
	// scan(yuri_range);
	// scan(chef_wait);
	// scan(yuri_wait);
	chef_range = next_int();
	yuri_range = next_int();
	chef_wait = next_int();
	yuri_wait = next_int();
	chef_first = 0.0;
	yuri_first = 0.0;
	if(chef_range - yuri_wait > 0)
	{
		chef_first = 0.5 * (chef_range - yuri_wait) * (chef_range - yuri_wait);
		if(chef_range - yuri_wait > yuri_range)
			chef_first = chef_first - 0.5 * (chef_range - yuri_wait - yuri_range) * (chef_range - yuri_wait - yuri_range);
	}
	if(yuri_range - chef_wait > 0)
	{
		yuri_first = 0.5 * (yuri_range - chef_wait) * (yuri_range - chef_wait);
		if(yuri_range - chef_wait > chef_range)
			yuri_first = yuri_first - 0.5 * (yuri_range - chef_wait - chef_range) * (yuri_range - chef_wait - chef_range);
	}
	ans = chef_range * yuri_range - chef_first - yuri_first;
	ans = ans / (chef_range * yuri_range);
	printf("%lf\n" , ans);
	}
	return 0;
}
